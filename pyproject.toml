[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "jax_trainer"
version = "0.1.0"
description = "Lightning-like framework for JAX"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Korbinian PÃ¶ppel", email = "korbip@korbip.de" },
    { name = "Phillip Lippe", email = "phillip.lippe@googlemail.com" },
]

dependencies = [
    "jax>=0.4.13",
    "jaxlib>=0.4.13",
    "torchvision>=0.15",
    "torchaudio>=2.0",
    "torch>=2.0",
    "numpy",
    "seaborn",
    "matplotlib",
    "pytorch-lightning>=2.0.5",
    "tensorboard>=2.13.0",
    "optax>=0.1.5",
    "orbax-checkpoint>=0.4.0",
    "flax>=0.7.0",
    "absl-py",
    "ml-collections",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-sugar>=0.9.7",
]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.2",
]

[tool.hatch.build.targets.wheel]
packages = ["src/jax_trainer"]

[tool.pytest.ini_options]
minversion = "7.0"
# addopts = "-ra -q --cov=jax_trainer --cov-report=term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["jax_trainer"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
]

[tool.black]
line-length = 120
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint]
max-line-length = 120
